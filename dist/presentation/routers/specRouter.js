"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const specializationUsecase_1 = require("../../domain/use-cases/specializationUsecase");
const specializationRepository_1 = require("../../domain/repositories/specializationRepository");
const mongodbSpecializationDataSources_1 = require("../../data/data-sources/mongodb/mongodbSpecializationDataSources");
const specializationController_1 = require("../controllers/specializationController");
const roleBasedAuthMiddleware_1 = require("../../middlewares/roleBasedAuthMiddleware");
const authRouterSetup_1 = require("./authRouterSetup");
const specRouter = (0, express_1.Router)();
const doctorSpecDataSource = new mongodbSpecializationDataSources_1.MongoDbDoctorSpecializtionDataSource();
const doctorSpecRepo = new specializationRepository_1.IDoctorSpecializtionRepoImpl(doctorSpecDataSource);
const doctorSpecService = new specializationUsecase_1.DoctorServiceImpl(doctorSpecRepo);
const specializationsController = new specializationController_1.SpecializationController(doctorSpecService);
specRouter.post("/", authRouterSetup_1.authMiddleWare.isAuthenticated.bind(authRouterSetup_1.authMiddleWare), (0, roleBasedAuthMiddleware_1.checkRolesAndPermissions)(["Admin"], "WRITE"), specializationsController.addSpec.bind(specializationsController));
specRouter.get("/", authRouterSetup_1.authMiddleWare.isAuthenticated.bind(authRouterSetup_1.authMiddleWare), (0, roleBasedAuthMiddleware_1.checkRolesAndPermissions)(["Admin", "Doctor", "User"], "READ"), specializationsController.getAllSpec.bind(specializationsController));
specRouter.get("/:id", authRouterSetup_1.authMiddleWare.isAuthenticated.bind(authRouterSetup_1.authMiddleWare), (0, roleBasedAuthMiddleware_1.checkRolesAndPermissions)(["Admin"], "READ"), specializationsController.findASpec.bind(specializationsController));
specRouter.put("/updateSpec/:id", authRouterSetup_1.authMiddleWare.isAuthenticated.bind(authRouterSetup_1.authMiddleWare), (0, roleBasedAuthMiddleware_1.checkRolesAndPermissions)(["Admin"], "WRITE"), specializationsController.updateSpec.bind(specializationsController));
specRouter.patch("/change-status/:id", authRouterSetup_1.authMiddleWare.isAuthenticated.bind(authRouterSetup_1.authMiddleWare), (0, roleBasedAuthMiddleware_1.checkRolesAndPermissions)(["Admin"], "WRITE"), specializationsController.blockSpec.bind(specializationsController));
exports.default = specRouter;
